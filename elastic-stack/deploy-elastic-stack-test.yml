---
- hosts: elastic-master-nodes
  name: Install Elasticsearch on Master Nodes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml"
  become: yes
  roles:
    - elastic-bootstrap-checks
    - { role: elastic.elasticsearch }
    - { role: geerlingguy.elasticsearch-curator }
  tasks:
    - name: Install OpenJDK 11 for RHEL-CENTOS
      yum:
        name: java-11-openjdk-devel
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution == "CentOS"

    - name: Install OpenJDK 11 for Ubuntu
      apt:
        name: openjdk-11-jdk
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution == "Ubuntu"
  vars:
    es_heap_size: "1g"
    es_log_dir: "/var/log/elasticsearch"
    es_data_dirs:
      - "/data"
    es_xpack_trial: true
    es_version: "{{ ES_VERSION }}"
    es_version_lock: true
    es_enable_transport_ssl: true
    es_ssl_certificate_authority: "/home/ansible/certs/elastic-stack-ca.p12"
    es_ssl_key: "files/elasticsearch.key"
    es_ssl_certificate: "files/elasticsearch.crt"
    es_enable_xpack: true
    es_api_basic_auth_username: "elastic"
    es_api_basic_auth_password: "{{ VAULT_ES_ADMIN_PASSWORD }}"
    es_users:
      native:
        elastic:
          password: "{{ VAULT_ES_ADMIN_PASSWORD }}"
    es_config:
      cluster.name: "disslab"
      node.name: ${HOSTNAME}
      bootstrap.memory_lock: true
      node.master: true
      node.data: false
      node.ingest: false
      node.ml: false
      network.host: [ "_ens192_", "_local_" ]
      http.port: 9200
      cluster.initial_master_nodes: "{{ groups['elastic-master-nodes'] }}"
      discovery.seed_hosts: "{{ groups['elastic-master-nodes'] }}"
      discovery.zen.minimum_master_nodes: "2"
      network.bind_host: "0.0.0.0"
      network.publish_host: "{{ ansible_ens192.ipv4.address }}"
      xpack.security.audit.enabled: false
      xpack.security.authc.realms.native.native1.order: 1
      http.cors.enabled : true
      http.cors.allow-origin : "*"
      http.cors.allow-methods : OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type, Content-Length, Authorization
  elasticsearch_curator_action_yaml: |
      ---
      actions:
        1:
          action: delete_indices
          description: >-
            Delete the system-level .watcher-history- index data older than 30 days. It is a good idea to clean this up regularly.
          options:
            ignore_empty_list: True
            timeout_override:
            continue_if_exception: False
            disable_action: false
          filters:
          - filtertype: pattern
            kind: prefix
            value: .watcher-history-
            exclude:
          - filtertype: age
            source: name
            direction: older
            timestring: '%Y.%m.%d'
            unit: days
            unit_count: 30
            exclude:
        2:
          action: forcemerge
          description: >-
            Perform a forceMerge on all DAILY indices to the max_num_segments of 1 per shard. It is ideal to merge all segments to 1.
          options:
            max_num_segments: 1
            timeout_override: 21600
          filters:
          - filtertype: age
            source: name
            direction: older
            timestring: '%Y.%m.%d'
            unit: days
            unit_count: 1
        3:
          action: forcemerge
          description: >-
            Perform a forceMerge on all MONTHLY indices to the max_num_segments of 1 per shard. It is ideal to merge all segments to 1.
          options:
            max_num_segments: 1
            timeout_override: 21600
          filters:
          - filtertype: age
            source: name
            direction: older
            timestring: '%Y.%m'
            unit: months
            unit_count: 1

- hosts: elastic-data-nodes
  name: Install Elasticsearch on Data Nodes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml"
  become: yes
  roles:
    - elastic-bootstrap-checks
    - { role: elastic.elasticsearch }
  tasks:
    - name: Install OpenJDK 11 for RHEL-CENTOS
      yum:
        name: java-11-openjdk-devel
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution == "CentOS"

    - name: Install OpenJDK 11 for Ubuntu
      apt:
        name: openjdk-11-jdk
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution == "Ubuntu"
  vars:
    es_heap_size: "1g"
    es_log_dir: "/var/log/elasticsearch"
    es_data_dirs:
      - "/data"
    es_xpack_trial: true
    es_version: "{{ ES_VERSION }}"
    es_version_lock: true
    es_enable_transport_ssl: true
    es_ssl_certificate_authority: "files/ca.crt"
    es_ssl_key: "files/elasticsearch.key"
    es_ssl_certificate: "files/elasticsearch.crt"
    es_enable_xpack: true
    es_api_basic_auth_username: "elastic"
    es_api_basic_auth_password: "{{ VAULT_ES_ADMIN_PASSWORD }}"
    es_config:
      cluster.name: "disslab"
      node.name: ${HOSTNAME}
      bootstrap.memory_lock: true
      node.master: false
      node.data: true
      node.ingest: false
      node.ml: false
      network.host: [ "_ens192_", "_local_" ]
      http.port: 9200
      cluster.initial_master_nodes: "{{ groups['elastic-master-nodes'] }}"
      discovery.seed_hosts: "{{ groups['elastic-master-nodes'] }}"
      discovery.zen.minimum_master_nodes: "2"
      network.bind_host: "0.0.0.0"
      network.publish_host: "{{ ansible_ens192.ipv4.address }}"
      xpack.security.audit.enabled: false
      xpack.security.authc.realms.native.native1.order: 1
      http.cors.enabled : true
      http.cors.allow-origin : "*"
      http.cors.allow-methods : OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type, Content-Length, Authorization

- hosts: elastic-ingest-nodes
  name: Install Elasticsearch on Ingest Nodes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml"
  become: yes
  roles:
    - elastic-bootstrap-checks
    - { role: elastic.elasticsearch }
  tasks:
    - name: Install OpenJDK 11 for RHEL-CENTOS
      yum:
        name: java-11-openjdk-devel
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution == "CentOS"

    - name: Install OpenJDK 11 for Ubuntu
      apt:
        name: openjdk-11-jdk
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution == "Ubuntu"
  vars:
    es_heap_size: "1g"
    es_log_dir: "/var/log/elasticsearch"
    es_data_dirs:
      - "/data"
    es_xpack_trial: true
    es_version: "{{ ES_VERSION }}"
    es_version_lock: true
    es_enable_transport_ssl: true
    es_ssl_certificate_authority: "files/ca.crt"
    es_ssl_key: "files/elasticsearch.key"
    es_ssl_certificate: "files/elasticsearch.crt"
    es_enable_xpack: true
    es_api_basic_auth_username: "elastic"
    es_api_basic_auth_password: "{{ VAULT_ES_ADMIN_PASSWORD }}"
    es_config:
      cluster.name: "disslab"
      node.name: ${HOSTNAME}
      bootstrap.memory_lock: true
      node.master: false
      node.data: false
      node.ingest: true
      node.ml: false
      network.host: [ "_ens192_", "_local_" ]
      http.port: 9200
      cluster.initial_master_nodes: "{{ groups['elastic-master-nodes'] }}"
      discovery.seed_hosts: "{{ groups['elastic-master-nodes'] }}"
      discovery.zen.minimum_master_nodes: "2"
      network.bind_host: "0.0.0.0"
      network.publish_host: "{{ ansible_ens192.ipv4.address }}"
      xpack.security.audit.enabled: false
      xpack.security.authc.realms.native.native1.order: 1
      http.cors.enabled : true
      http.cors.allow-origin : "*"
      http.cors.allow-methods : OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type, Content-Length, Authorization

- hosts: elastic-client-nodes
  name: Install Elasticsearch on Client Nodes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml"
  become: yes
  roles:
    - elastic-bootstrap-checks
    - { role: elastic.elasticsearch }
  tasks:
    - name: Install OpenJDK 11 for RHEL-CENTOS
      yum:
        name: java-11-openjdk-devel
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution == "CentOS"

    - name: Install OpenJDK 11 for Ubuntu
      apt:
        name: openjdk-11-jdk
        state: latest
        update_cache: yes
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution == "Ubuntu"
  vars:
    es_heap_size: "1g"
    es_log_dir: "/var/log/elasticsearch"
    es_data_dirs:
      - "/data"
    es_xpack_trial: true
    es_version: "{{ ES_VERSION }}"
    es_version_lock: true
    es_enable_transport_ssl: true
    es_ssl_certificate_authority: "files/ca.crt"
    es_ssl_key: "files/elasticsearch.key"
    es_ssl_certificate: "files/elasticsearch.crt"
    es_enable_xpack: true
    es_api_basic_auth_username: "elastic"
    es_api_basic_auth_password: "{{ VAULT_ES_ADMIN_PASSWORD }}"
    es_config:
      cluster.name: "disslab"
      node.name: ${HOSTNAME}
      bootstrap.memory_lock: true
      node.master: false
      node.data: false
      node.ingest: false
      node.ml: false
      network.host: [ "_ens192_", "_local_" ]
      http.port: 9200
      cluster.initial_master_nodes: "{{ groups['elastic-master-nodes'] }}"
      discovery.seed_hosts: "{{ groups['elastic-master-nodes'] }}"
      discovery.zen.minimum_master_nodes: "2"
      network.bind_host: "0.0.0.0"
      network.publish_host: "{{ ansible_ens192.ipv4.address }}"
      xpack.security.audit.enabled: false
      xpack.security.authc.realms.native.native1.order: 1
      http.cors.enabled : true
      http.cors.allow-origin : "*"
      http.cors.allow-methods : OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type, Content-Length, Authorization

- hosts: elastic-kibana-nodes
  name: Install and set up Kibana
  become: yes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml" #vaulted creds for elastic passwords
  roles:
  - role: kibana-role
    kibana_log_dir: "/var/log/kibana"
    kibana_config:
        server.name: "{{ inventory_hostname }}"
        server.port: 5601
        server.host: "{{ ansible_default_ipv4.address }}"
        elasticsearch.hosts: "http://{{ ansible_default_ipv4.address }}:9200"
        elasticsearch.username: "elastic"
        elasticsearch.password: "{{ VAULT_ES_ADMIN_PASSWORD }}"

- hosts: elastic-logstash-nodes
  name: Install and set up Logstash
  become: yes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml" #vaulted creds for elastic passwords
  roles:
  - role: geerlingguy.java
  - role: geerlingguy.logstash

- hosts: elastic-apm-servers
  become: yes
  vars_files:
    - "{{ playbook_dir }}/vars/vault.yml" #vaulted creds for elastic passwords
  roles:
    - role: elastic.apm.server
  vars:
    - apm_server_version: 7.10.2
    - apm_server_conf_apm_server_host: localhost:8200
    - apm_server_conf_output_elasticsearch_hosts: ["localhost:9200"]
    - apm_server_conf_output_elasticsearch_enabled: true
    - apm_server_conf_output_elasticsearch_username: elastic
    - apm_server_conf_output_elasticsearch_password: "{{ VAULT_ES_ADMIN_PASSWORD }}"